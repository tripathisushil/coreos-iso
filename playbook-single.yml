---
- name: Playbook to recreate the RHCOS ISO for static IP
  hosts: localhost
  gather_facts: false

  pre_tasks:

  - name: Ensure mkisofs and rsync is installed
    yum:
      name: "{{ packages }}"
    become: true      
    delegate_to: localhost
    vars:     
      packages:
      - rsync 
      - genisoimage

  tasks:
  - block:
    - name: Create the download url for ppc64le
      set_fact:
        dl_url: 'https://mirror.openshift.com/pub/openshift-v{{ ocp_version.split(".")[0] }}/ppc64le/dependencies/rhcos/{{ ocp_version.split(".")[0] }}.{{ ocp_version.split(".")[1] }}/{{ ocp_version }}/{{ iso_name_ppc64 }}'
        my_iso: "{{ iso_name_ppc64 }}"
        my_cksum: "{{ iso_checksum_ppc64 }}"
      when: arch == 'ppc64le'

    - name: Create the download url for x86_64
      set_fact:
        dl_url: 'https://mirror.openshift.com/pub/openshift-v{{ ocp_version.split(".")[0] }}/dependencies/rhcos/{{ ocp_version.split(".")[0] }}.{{ ocp_version.split(".")[1] }}/{{ ocp_version }}/{{ iso_name }}'
        my_iso: "{{ iso_name }}"
        my_cksum: "{{ iso_checksum }}"
      when: arch == 'x86_64'

    - name: Check if ISO is already available
      stat:
        path: /tmp/{{ my_iso }}
        checksum_algorithm: sha256
        get_checksum: yes
      register: iso_file

    - name: Get the original ISO
      get_url:
        url: "{{ dl_url }}"
        dest: /tmp
        checksum: sha256:{{ my_cksum }}
      when: not iso_file.stat.exists or iso_file.stat.checksum != my_cksum

    - name: Mount ISO
      mount:
        src: /tmp/{{ my_iso }}
        path: /mnt/iso
        fstype: iso9660
        opts: ro,noauto
        state: mounted
      become: true

    - name: Copy contents of iso
      synchronize:
        src: /mnt/iso/
        dest: /tmp/rhcos-iso/

- name: Generate the menu list
  hosts: all
  order: sorted
  gather_facts: false

  tasks:

  - name: Relace the grub.cfg file
    template:
      src: grub.cfg-single.j2
      dest: /tmp/rhcos-iso/boot/grub/grub.cfg
    become: true
    delegate_to: localhost
    when: arch == 'ppc64le'

  - block:
    - name: Relace the isolinux.cfg file
      template:
        src: isolinux.cfg-single.j2
        dest: /tmp/rhcos-iso/isolinux/isolinux.cfg
      become: true
      delegate_to: localhost
   
    - name: Relace the grub.cfg file
      template:
        src: grub.cfg-single.j2
        dest: /tmp/rhcos-iso/EFI/redhat/grub.cfg
      become: true
      delegate_to: localhost
    when: arch == 'x86_64'

- name: Make the single ISO
  hosts: localhost
  gather_facts: false

  tasks:

  - name: Create new ISO image for x86_64
    command: >
         /usr/bin/mkisofs -U -A 'RHCOS-x86_64' -V 'RHCOS-x86_64' -volset 'RHCOS-x86_64' -J -joliet-long -r -v -T
           -x ./lost+found -o /tmp/rhcos-install-cluster.iso -b isolinux/isolinux.bin
           -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot -e images/efiboot.img
           -no-emul-boot .
    args:
      chdir: /tmp/rhcos-iso/
    become: true
    delegate_to: localhost
    when: arch == 'x86_64'

  - name: Create new ISO image for ppc64le
    command: >
         /usr/bin/mkisofs -U -A 'RHCOS-ppc64le' -V 'RHCOS-ppc64le' -volset 'RHCOS-ppc64le' -J -joliet-long -r -v -T 
           -x ./lost+found -o /tmp/rhcos-install-cluster.iso -chrp-boot .
    args:
      chdir: /tmp/rhcos-iso/
    become: true
    delegate_to: localhost
    when: arch == 'ppc64le'

- name: Cleanup tasks
  hosts: localhost
  gather_facts: false

  tasks:

  - block: 
    - name: Unmount ISO
      mount:
        path: /mnt/iso
        state: absent

    - name: Remove ISO copy
      file:
        path: /tmp/rhcos-iso
        state: absent
    become: true
...
